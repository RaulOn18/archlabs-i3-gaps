#!/usr/bin/env bash

fg="daddee"
fd="a6a9b7"
bg="18191c"
bl="1C1E21"
blr="202326"
ac="7baae8"
fifo="/tmp/barfifo"
#trap 'pkill -P $$' SIGINT

tim() {
	if [[ $(cat /tmp/barblink) = ":" ]]; then
		echo " " > /tmp/barblink
		time="%{F#ff$fd}$(date "+%A")%{F-} $(date "+%I %M")";
	else
		echo ":" > /tmp/barblink
		time="%{F#ff$fd}$(date "+%A")%{F-} $(date "+%I:%M")";
	fi

	echo "t%{A:nottime:}$time%{A}" > $fifo
}

nam() {
	name="$(xdotool getwindowfocus getwindowname)"
	[[ $(wc -m <<< "$name") -ge 41 ]] &&
		echo "n$(cut -c -40 <<< "$name")..." > $fifo ||
		echo "n$name" > $fifo
}

desktop() {
	if xdo id -a "$WM_NAME" > /dev/null
then
	  printf "%s\n" "The panel is already running." >&2
	  exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

## format an icon
icon() {
    case $2 in
        1) printf "%s" "%{F$color1}${1}%{F-}";;
        2) printf "%s" "%{F$color2}${1}%{F-}";;
        3) printf "%s" "%{F$color3}${1}%{F-}";;
        4) printf "%s" "%{F$color4}${1}%{F-}";;
        5) printf "%s" "%{F$color5}${1}%{F-}";;
        6) printf "%s" "%{F$color6}${1}%{F-}";;
    esac
}

## write pipe
# wm
while :; do
    desk=$(xdotool get_desktop)
    wm=$(($desk + 1))
    case "$wm" in
        1) echo 'W' "$(icon  1)";;
        2) echo 'W' "$(icon  1)";;
        3) echo 'W' "$(icon  1)";;
        4) echo 'W' "$(icon  1)";;
        5) echo 'W' "$(icon  1)";;
        6) echo 'W' "$(icon  1)";;
    esac
    sleep 0.4;
done > $PANEL_FIFO &
}

volume() {
	amix="$(amixer -D pulse get Master | grep -i "\[off\]\|\[on\]")"
	muted="$(awk '{print $6}' <<< $amix | sed -e '1!d' -e 's/\[//' -e 's/\]//')"
	vol="$(sed -e '1!d' -e 's/\[//g' -e 's/\]//g'  <<< $amix | grep -oi '[0-9][0-9]*%')"

	local b="%{A4:vol -p up:}%{A5:vol -p down:}%{A3:vol -p m:}%{A:vol -p status vol:}"
	local a="%{A}%{A}%{A}%{A}"
	if [[ $muted = off ]]; then
		echo -e "v${b}Muted${a}" > $fifo; return
	fi

	echo -e "v${b}$vol${a}" > $fifo
}

bat() {
	cat /sys/class/power_supply/*/capacity &>/dev/null || return
	declare -i capacity status

	cap="$(cat /sys/class/power_supply/*/capacity 2>/dev/null)"
	#capacity="$(($cap / 4))"
	status=$(cat /sys/class/power_supply/*/status 2>/dev/null)

	#case "$capacity" in
	#	0) bat=;;
	#	1) bat=;;
	#	2) bat=;;
	#	3) bat=;;
	#	*) bat=;;
	#esac

	[[ $status = Charging ]] && stuff="(c)"

	echo "b%{A4:light -A 10:}%{A5:light -U 10:}%{A:notify-send \\\"\$(acpi)\\\":}${bat} $stuff $cap%%{O12}|%{O12}%{A}%{A}%{A}" > $fifo
}


case $1 in
	-b) bat; exit;;
	-t) tim; exit;;
	-n) nam; exit;;
	#-v) volume; exit;;
	-d) desktop; exit;;
esac

[[ -e $fifo ]] && rm $fifo
mkfifo $fifo

killall lemonbar
sleep 0.1

bspc subscribe desktop_focus | while read -r des; do
	bar -d
	sleep 0.05
	bar -n
done &

bspc subscribe node | while read -r title; do
	bar -n
done &

monitor=( $(xrandr -q | grep primary | awk '{print $4}' | sed -e 's/x/ /g' -e 's/+/ /g') )
monitorName="$(xrandr -q | grep primary | awk '{print $1}')"
width=1366
offX=95
offY=10

(sleep 0.4;
bat;
#volume;
desktop;
) &

(sleep 1; xdo above -t $(xdo id -n root) $(xdo id -n lemonbar)) &

while read -r line < "$fifo"; do
	case $line in
		v*) vol="${line#?}";;
		b*) bat="${line#?}";;
		t*) time="${line#?}";;
		n*) name="${line#?}";;
		d*) desk="${line#?}";;
	esac
	echo -e "%{O25}$time%{c}$name%{r}$bat$vol%{O12}%{F#ff$fd}|%{F-}%{O12}$desk%{O25}"
	sleep 0.01
done | (lemonbar \
	-d \
	-a 25 \
	-U "#ff$fd" \
	-u 8 \
	-B "#ff$bg" \
	-F "#ff$fg" \
	-f "Fira Mono:pixelsize=10:style=bold" \
	-f "Hack Nerd Font:pixelsize=10" \
	-g "${width}x35+$offX+$offY"; kill -- -0) | bash &

#while true; do
#	bar -n;
#	sleep 0.1
#done

while true; do
	bar -b;
	bar -t;
	bar -n;
	sleep 1
done > $fifo &
